<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站:<a href="https://mdecd2025.github.io/hw-Yu-Fang-Hong/">https://mdecd2025.github.io/hw-Yu-Fang-Hong/</a></p>
<p>學員作業倉儲:<a href="https://github.com/mdecd2025/hw-Yu-Fang-Hong">https://github.com/mdecd2025/hw-Yu-Fang-Hong</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<h1>Tasks</h1>
<h2>w1</h2>
<p>建立可攜環境，維護個人網站</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/8U05KAtO6Ok?si=HXSOKvG6o0qUi0rP" title="YouTube video player" width="560"></iframe></p>
<p>acp setting</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/lg04wXC5VQ4?si=DPeYjidRkK1JBasY" title="YouTube video player" width="560"></iframe></p>
<h2>task2</h2>
<p>SSH推送設定</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/50GQfZ8RPNc?si=t2_WGTJFCc2qdwgf" title="YouTube video player" width="560"></iframe></p>
<h3>w3</h3>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/113a3d7e19b36a7672a136f3731ef07b095adeef/list_2a.py">列出 2a 學員作業網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/29173e8b73ad422fd7c44bcd93658a3579d63633/list_stage_3.py">列出 2b 學員作業網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2a_group.py">列出 2a 分組網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2b_group.py">列出 2b 分組網站與倉儲連結</a></p>
<hr/>
<p>請列出各班目前尚未納入分組的學員名單</p>
<p></p>
<h3>w4</h3>
<p>將電腦設為所份配的固定 IPv6</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Xez9nDRSkzM?si=aZSG0pc3P_W1rwYm" title="YouTube video player" width="560"></iframe></p>
<h3>w14</h3>
<p>使用 ipv6 個人序號開啟近態編輯網站</p>
<p><img alt="" height="338" src="/images/螢幕擷取畫面 2025-05-23 165504.png" width="600"/></p><h2>task3</h2>
<h4>使用 Solvespace 繪製平面四連桿系統零組件</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/H-Jvrmo6RtA?si=83_ekLq751zxsZr5" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/link1.slvs">link1.slvs</a></p>
<p><a href="/downloads/link2.slvs">link2.slvs</a></p>
<p><a href="/downloads/link3.slvs">link3.slvs</a></p>
<p><a href="/downloads/shaft1.slvs">shaft1.slvs</a></p>
<p><a href="/downloads/shaft2.slvs">shaft2.slvs</a></p>
<p><a href="/downloads/base.slvs">base.slvs</a></p>
<p><a href="/downloads/fourbar_linkage_design.slvs">fourbar_linkage_design.slvs</a></p>
<h4>使用 Solvespace 組合平面四連桿系統零組件</h4>
<h2>task4</h2>
<p>利用老師提供的Tutorials熟悉Webots，並成功做出四連桿機構</p>
<p></p>
<h3>w5</h3>
<p><span style="background-color: #ffff00;"><strong>Tutorial1</strong></span></p>
<p>此影片e-puck未成功匯入程式碼，下個影片會匯入</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Dha3QCc9yHI?si=NeR2yKdr6EdTAydS" title="YouTube video player" width="560"></iframe></p>
<p>將程式匯入後，機器人行動</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Vt6pWPg4ivs?si=YOt1Blk9N9W0rgzt" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/my_first_simulation.wbt">my_first_simulation.wbt</a></p>
<p><a href="/downloads/.my_first_simulation.wbproj">my_first_simulation.wbproj</a></p>
<p><a href="/downloads/.my_first_simulation.jpg">my_first_simulation.jpg</a></p>
<p><a href="/downloads/epuck_controller.c">epuck_controller.c</a></p>
<h3>w6</h3>
<p><span style="background-color: #ffff00;">Tutorial 2 </span></p>
<p>修改地板及運用<span>兩顆球及四面牆，並使用 shape <span>節點實現 </span>DEF-USE 機制</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/wFXZsBwmNR8?si=z7BoAgANiKow_Ukh" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/obstacles.wbt">obstacles.wbt</a></p>
<p><a href="/downloads/.obstacles.jpg">obstacles.jpg</a></p><h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p>根據老師提供的<a href="https://mdecd2025.github.io/hw-scrum-1/content/HW1.html">步驟</a>完成<span style="background-color: #ccffcc;">HW1</span>，第一步影片為 <span style="background-color: #ccffcc;">Step1 - Step6</span> ，在 <span style="background-color: #99ccff;">Step4</span> 中，在確定 t = 0 儲存後，<span>利用 <span style="background-color: #99ccff;">SciTE</span> 開啟 <span style="background-color: #99ccff;">Y:\tmp\hw1\worlds\hw1.wbt</span> ，此步驟我還不了解，便在深入了解後，新增到下一部影片中。</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/tiXHWys-7Bk?si=Qt6E6fJ_RqBmzASg" title="YouTube video player" width="560"></iframe></p>
<p>後來了解了利用 <span>SciTE 打開場 hw1.wbt 檔案，第二部影片為 <span style="background-color: #ccffcc;">Step6 - Step9 </span>，在下一部影片會放上作業全部完成的步驟。</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/QO4AdMxegxE?si=SnhOp6TGCTfO37nX" title="YouTube video player" width="560"></iframe></p>
<p>________________________________________________________________________________</p>
<p>w14 將其餘的 links 補上並擺好位置，之後會補上步驟影片</p>
<p><img caption="false" height="338" src="/images/螢幕擷取畫面 2025-05-23 145541.png" width="600"/></p>
<p>剛開始模擬作動時，發生錯誤導致只有紅色連趕在轉動。</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/-4ekeG6W9xQ?si=cO68CpUKXyaxQaqM" title="YouTube video player" width="560"></iframe> 後來發現沒有設置物理性質導致其餘連桿無法連動，且當時作動邊界未設置好。</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/LPqtmZC4PHs?si=o0qkj6se8DHkzz8Y" title="YouTube video player" width="560"></iframe></p><h2>HW2</h2>
<p>先利用 solvespace 將四連桿機構畫出來 (第一步影片) ，將其零件組合起來(第二部影片)，接下來再<span>宣告該轉軸所在位置 以及旋轉軸向量即可(第三部影片)。後續會再將影片加上字幕，並完成最後的模擬。</span></p>
<h4>使用 Solvespace 繪製平面四連桿系統零組件</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/AELxuOj3y6Y?si=p2CqZYAkW9r_NFJ6" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/link1.slvs">link1.slvs</a></p>
<p><a href="/downloads/link2.slvs">link2.slvs</a></p>
<p><a href="/downloads/link3.slvs">link3.slvs</a></p>
<p><a href="/downloads/shaft1.slvs">shaft1.slvs</a></p>
<p><a href="/downloads/shaft2.slvs">shaft2.slvs</a></p>
<p><a href="/downloads/base.slvs">base.slvs</a></p>
<p><a href="/downloads/fourbar_linkage_design.slvs">fourbar_linkage_design.slvs</a></p>
<h4>使用 Solvespace 組合平面四連桿系統零組件</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/C46aj0s4Sdo?si=1BogIMp68aKRRAvS" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/hw2.slvs">hw2.slvs</a></p>
<p><a href="/downloads/hw2.stl">hw2.stl</a></p><h2>HW3</h2>
<p></p>
<p>目前只完成利用CAD繪製投籃機作動，接下來會將其匯入webots嘗試模擬。</p>
<p>以下為 <span style="background-color: #ffff00;">CAD繪製投籃機做動</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/WNtx6R_YwxQ?si=vBmmkckVQ-wbVi1x" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/1.slvs">投籃機作動.slvs</a></p><h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p><object data="/images/midterm.svg" height="300" type="image/svg+xml" width="900"></object></p>
<p>各週網頁內容:</p>
<p>w1:利用https建立可攜，並設定acp推送設置</p>
<p>w2:未成功完成task1就未上傳</p>
<p>w3:列出各班目前未納入分組的學員，不過後來未成功寫出程式</p>
<p>w4:利用SSH推送設定，以及ipv6的設置</p>
<p>w5:試著做出平面四連桿機構，最後並未成功能夠運動</p>
<p>w6:未推送</p>
<p>w7:放連假，未推送</p>
<p>w8:新增task3，使用solvespace繪製平面四連桿系統零件圖，使用webots練習Tutorial1，最後在無人機的部分卡關了</p>
<p>期中心得:有些週數沒按時推送，將在手機設置提醒確保自己能在期中週後保持每週推送；webots方面還需多加強，希望在期中週可以成功完成<span>Tutorial1練習，並做出HW1</span></p>
<p>期中自評影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/o3dsaV3yN10?si=bHE5ZrYjf2u-WFF4" title="YouTube video player" width="560"></iframe></p>
<p style="padding-left: 30px;"></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p><span style="background-color: #ff0000;">錯誤影片</span>：未先建立 Robot 點</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/6FTIcf67Au4?si=oHmtZ4ky659f6xpc" title="YouTube video player" width="560"></iframe></p>
<p></p><h2>Exam2</h2>
<p><span style="background-color: #00ff00;">影片一</span> ：exam2 零件繪製以及組合</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/clChoPYdV54?si=fdVuz_72zUt42-7e" title="YouTube video player" width="560"></iframe></p>
<p></p><h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號</p>
<h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<p><span style="color: #999999;">_______________________________________________________________________________________________</span></p>
<p>根據老師提供的專案進行說明。</p>
<p>下面這張圖為七段顯示器以及一個矩形競技場。</p>
<p><span style="color: #000000;"><img alt="" height="425" src="/images/螢幕擷取畫面 2025-06-13 072244.png" width="800"/></span></p>
<p>此為上面七段顯示器的python程式碼</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">from controller import Supervisor

class SevenSegmentController:
    def __init__(self, supervisor, color_on, color_off):
        self.supervisor = supervisor

        # Define the segments for each digit
        self.digit_segments = [
            [f"a1", f"b1", f"c1", f"d1", f"e1", f"f1", f"g1"],  # Units
            [f"a2", f"b2", f"c2", f"d2", f"e2", f"f2", f"g2"],  # Tens
            [f"a3", f"b3", f"c3", f"d3", f"e3", f"f3", f"g3"]   # Hundreds
        ]

        # Segment patterns for digits 0-9
        self.segment_patterns = {
            0: [1, 1, 1, 1, 1, 1, 0],
            1: [0, 1, 1, 0, 0, 0, 0],
            2: [1, 1, 0, 1, 1, 0, 1],
            3: [1, 1, 1, 1, 0, 0, 1],
            4: [0, 1, 1, 0, 0, 1, 1],
            5: [1, 0, 1, 1, 0, 1, 1],
            6: [1, 0, 1, 1, 1, 1, 1],
            7: [1, 1, 1, 0, 0, 0, 0],
            8: [1, 1, 1, 1, 1, 1, 1],
            9: [1, 1, 1, 1, 0, 1, 1]
        }

        # Colors for on and off states
        self.color_on = color_on  # Bright green
        self.color_off = color_off  # Black

        # Retrieve material nodes for each segment
        self.segment_nodes = []
        for digit in self.digit_segments:
            digit_nodes = []
            for segment in digit:
                node = self.supervisor.getFromDef(segment)
                if node is None:
                    print(f"Error: Node with DEF name '{segment}' not found!")
                    exit()
                digit_nodes.append(node.getField("diffuseColor"))
            self.segment_nodes.append(digit_nodes)

    def set_digit(self, digit_index, value):
        """Set the digit at the given index (0 for units, 1 for tens, 2 for hundreds) to the given value (0-9)."""
        pattern = self.segment_patterns[value]
        for i, state in enumerate(pattern):
            color = self.color_on if state else self.color_off
            self.segment_nodes[digit_index][i].setSFVec3f(color)

    def display_number(self, number):
        """Display a number (0-999) using the three 7-segment displays."""
        if not (0 &lt;= number &lt;= 999):
            print("Error: Number out of range (must be 0-999)")
            return

        # Break the number into hundreds, tens, and units
        hundreds = number // 100
        tens = (number % 100) // 10
        units = number % 10

        # Update the displays
        self.set_digit(2, hundreds)
        self.set_digit(1, tens)
        self.set_digit(0, units)


# Main program
if __name__ == "__main__":
    # Create a Supervisor instance
    supervisor = Supervisor()

    # Define colors
    color_on = [0.0, 1.0, 0.0]  # Bright green
    color_off = [0.0, 0.0, 0.0]  # Black

    # Create an instance of the SevenSegmentController
    controller = SevenSegmentController(supervisor, color_on, color_off)

    # Run the simulation loop
    timestep = int(supervisor.getBasicTimeStep())
    while supervisor.step(timestep) != -1:
        try:
            # Get user input for the number to display
            number = 123
            controller.display_number(number)
        except ValueError:
            print("Invalid input. Please enter an integer between 0 and 999.")</pre>
<p></p>
<p><span style="background-color: #ffff99;">self.digit_segments</span> 中的 a1 、 b1 、c1 ...； a2 、 b2 、c2 ...； a3 、 b3 、c3 ...，分別為個、十、百位數的 DEF 名稱，共有 7 段所以英文字母到g。</p>
<p><span style="background-color: #ffff99;">self.segment_patterns</span> 則是定義了數字 <code data-end="385" data-start="380">0~9</code> 每個數字的七段開啟狀態（<code data-end="401" data-start="398">1</code> 表示亮，<code data-end="409" data-start="406">0</code> 表示滅）。</p>
<p><span style="background-color: #ffff99;">self.color_on</span> 中的 =color_on 為數字顏色明稱 (on 為綠色， off 為黑色)</p>
<p><span style="background-color: #ffff99;">segment_nodes</span> 中，透過 <code data-end="819" data-start="807">Supervisor</code>，根據 segment 的 <code data-end="838" data-start="833">DEF</code> 名稱（如 <code data-end="850" data-start="844">"a1"</code>），取得對應的 Material 節點，並從這個 Material 節點中，取出 <code data-end="946" data-start="932">diffuseColor</code> 欄位（代表顏色），回傳一個可用來 <code data-end="978" data-start="964">setSFVec3f()</code> 操作的 field 物件。</p>
<p><span style="background-color: #ffff99;">set_digit()</span> 中，將利用 setSFVec3f() 控制顯示器數值。</p>
<p><span style="color: #999999;">_________________________________________________________________________________________</span></p>
<p><img alt="" height="205" src="/images/螢幕擷取畫面 2025-06-13 081845.png" width="304"/></p>
<p>此為矩形競技場。</p>
<p><img alt="" height="163" src="/images/螢幕擷取畫面 2025-06-13 082444.png" width="359"/></p>
<p>建立 Robot 取名為 robot ，並調整初始位置 translation o, -0.59, 0.26 ，Add new pose 運用原先位置。</p>
<p><img alt="" height="332" src="/images/螢幕擷取畫面 2025-06-13 082850.png" width="309"/></p>
<p>在 pose 中的子目錄新增一個七段顯示器的 pose ，並設定這顯示器的初始位置在個位數的數值左下方。子目錄下的 pose 為七段顯示器中的背板， first Group 為個位數的數值 a1~g1 ， second Pose 為十位數的位置，包含 second Group ，數值  a2~g2，third pose 就如 second pose 一樣。</p><h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>